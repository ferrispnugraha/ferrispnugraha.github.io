<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://ferrispnugraha.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ferrispnugraha.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2025-08-23T12:50:27+00:00</updated><id>https://ferrispnugraha.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design.
</subtitle><entry><title type="html">Bosonic qubit types</title><link href="https://ferrispnugraha.github.io/blog/2025/bosonic-qubits/" rel="alternate" type="text/html" title="Bosonic qubit types" /><published>2025-08-23T21:00:00+00:00</published><updated>2025-08-23T21:00:00+00:00</updated><id>https://ferrispnugraha.github.io/blog/2025/bosonic-qubits</id><content type="html" xml:base="https://ferrispnugraha.github.io/blog/2025/bosonic-qubits/"><![CDATA[<p>(content inspired from [1])</p>

<h1 id="motivation">Motivation</h1>

<p>The main idea is to encode the state of a logical qubit across the energy levels of a cavity, which are, in principle, infinite. Conventional quantum error correction codes, such as LDPC or surface codes, use multi-qubit codes to distribute quantum information among multiple qubits. In these codes, harmonic oscillators or resonators typically serve auxiliary roles, such as coupling or readout. In contrast, bosonic codes use the harmonic oscillator itself as the primary medium for storing quantum information, with an ancillary qubit facilitating control and readout, as illustrated in Fig. 1. This approach has the potential to reduce hardware overhead while leveraging the long coherence times characteristic of resonators.</p>

<figure style="text-align: center;">
  <img src="/assets/img/multiqubit_bosonic.png" alt="Multiqubit code vs bosonic code for quantum error correction." style="width: 80%; max-width: 600px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 1. Multiqubit code vs bosonic code for quantum error correction. Image from [1]
  </figcaption>
</figure>

<h1 id="how-does-it-work">How does it work?</h1>

<p>Let error set be \(\epsilon = \{E_i\}\), \(P = \sum_{k} \lvert k\rangle\langle k \rvert\) is the projection operator to the code space, and \(\alpha_{ij}\) is Hermitian matrix.</p>

<p>According to Knill-Laflamme condition, we should have</p>

<p>\begin{equation}
P E_i^\dagger E_j P = \alpha_{ij} P, \quad \forall E_i, E_j \in \epsilon
\end{equation}</p>

<p>Thus, we can see that</p>

\[\begin{align*}
\langle 0_L | E_i^{\dagger} E_j | 0_L \rangle &amp;= \langle 1_L | E_i^{\dagger} E_j | 1_L \rangle = \alpha_{ij}, \\
\langle 0_L | E_i^{\dagger} E_j | 1_L \rangle &amp;= \langle 1_L | E_i^{\dagger} E_j | 0_L \rangle = 0
\end{align*}\]

<p>where \(\lvert 0_L\rangle\) and \(\lvert 1_L\rangle\) are the logical basis states.</p>

<p>For a simple case where \(\epsilon = \{I, a\}\), we must satisfy \(\langle 0_L \lvert a^\dagger a \rvert 0_L \rangle = \langle 1_L \lvert a^\dagger a \rvert 1_L \rangle\).</p>

<h1 id="bosonic-code-types">Bosonic code types</h1>

<h2 id="cat-code-2-3-4">Cat code [2, 3, 4]</h2>

<p>This bosonic code is more robust to photon loss errors (Error set = {I, a}). It uses the phase to encode quantum information to the phase (c.f. phase shift key in classical information).</p>

<figure style="text-align: center;">
  <img src="/assets/img/cat_code.png" alt="Logical and error space for cat code." style="width: 80%; max-width: 600px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 2. Logical and error space for cat code. Image from [3]
  </figcaption>
</figure>

<p>The logical qubit is encoded as: (N is normalization factor)</p>

\[\begin{equation}
\begin{split}
\lvert 0_L \rangle &amp;= N (\lvert \alpha \rangle + \lvert -\alpha \rangle) \\
\lvert 1_L \rangle &amp;= N (\lvert i \alpha \rangle + \lvert -i \alpha \rangle)
\end{split}
\end{equation}\]

<p>To orthogonalize both 0 and 1, it is more common to write</p>

\[\begin{align*}
\lvert 0_L \rangle &amp;= N (\lvert \alpha \rangle + \lvert -\alpha \rangle + \lvert i \alpha \rangle + \lvert -i \alpha \rangle) \\
\lvert 1_L \rangle &amp;= N (\lvert \alpha \rangle + \lvert - \alpha \rangle - \lvert i \alpha \rangle - \lvert -i\alpha \rangle)
\end{align*}\]

<p>The error code is given by</p>

\[\begin{equation}
\begin{split}
\lvert 0_L \rangle &amp;= N (\lvert \alpha \rangle - \lvert -\alpha \rangle) \\
\lvert 1_L \rangle &amp;= N (\lvert i \alpha \rangle - \lvert -i \alpha \rangle)
\end{split}
\end{equation}\]

<p>where the coherent state \(\lvert \alpha \rangle = e^{-\frac{\lvert \alpha \rvert^2}{2}} \sum_{n=0}^{\infty} \frac{\alpha^n}{\sqrt{n!}} \lvert n \rangle\).</p>

<h2 id="binomial-code-5-6">Binomial code [5, 6]</h2>

<p>This correction code is designed to protect from the photon loss error \(a\), photon gain error \(a^\dagger\), and photon dephasing error \(n = a^\dagger a\).</p>

<figure style="text-align: center;">
  <img src="/assets/img/binomial_code.png" alt="The operations in binomial code." style="width: 80%; max-width: 600px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 3. The operations in binomial code. Image from [6]
  </figcaption>
</figure>

<p>By writing the error set as \(\epsilon = \{I, a, a^2, \ldots a^L, a^\dagger, (a^\dagger)^2, \ldots (a^\dagger)^L, n, n^2, \ldots n^D\}\), the code basis becomes:</p>

\[\begin{equation}
\begin{split}
|0_L\rangle &amp;= \frac{1}{\sqrt{2^N}} \sum_{\substack{p\ \text{even}}}^{\lfloor 0, N+1 \rfloor} \sqrt{\binom{N+1}{p}}\, \lvert p(S+1) \rangle, \\
|1_L\rangle &amp;= \frac{1}{\sqrt{2^N}} \sum_{\substack{p\ \text{odd}}}^{\lfloor 0, N+1 \rfloor} \sqrt{\binom{N+1}{p}}\, \lvert p(S+1) \rangle.
\end{split}
\end{equation}\]

<p>where spacing \(S = L+G\), \(N = \max(L, G, 2D)\), \(P\) is from 0 to N+1, and maximum fock number is (N+1)x(S+1).</p>

<p>For the lowest error, the error set is \(\epsilon = \{I, a\}\), giving:</p>

\[\begin{align*}
|0_L\rangle &amp;= \frac{1}{\sqrt{2}} (|0\rangle + |4\rangle), \\
|1_L\rangle &amp;= |2\rangle \\
|0_E\rangle &amp;= |3\rangle \\
|1_E\rangle &amp;= |1\rangle
\end{align*}\]

<p>Notice that in the logical code, the average n is 2, but in the error code the average n is not equal for 0 and 1, allowing immediate correction.</p>

<h2 id="gkp-code-7-8">GKP code [7, 8]</h2>

<p>Since \(q = \frac{a+a^\dagger}{2}\) and \(p = \frac{a-a^\dagger}{2i}\), the stabilizers can be written as</p>

\[\begin{equation}
\begin{split}
S_q &amp;= D(i\sqrt{2\pi}) &amp;= \exp(i 2\sqrt{\pi} q) \\
S_p &amp;= D(\sqrt{2\pi}) &amp;= \exp(-i 2\sqrt{\pi} p)
\end{split}
\end{equation}\]

<p>We associate Z axis with q, X axis with p, and Y axis with q-p. The Pauli operators are:</p>

\[\begin{equation}
\begin{split}
X &amp;= D\left(\sqrt{\frac{\pi}{2}}\right) &amp;= \exp(-i \sqrt{\pi} p) \\
Y &amp;= D\left(-\sqrt{\frac{\pi}{2}}(1+i)\right) &amp;= \exp(-i \sqrt{\pi}(p-q)) \\
Z &amp;= D\left(i\sqrt{\frac{\pi}{2}}\right) &amp;= \exp(i \sqrt{\pi} q)
\end{split}
\end{equation}\]

<p>This can be interpreted as a displacement in phase space. Pauli X causes q-displacement by \(\sqrt{\pi \hbar}\), Pauli Z causes p-displacement by \(\sqrt{\pi \hbar}\), while Hadamard is a rotation by \(\frac{\pi}{2}\).</p>

<figure style="text-align: center;">
  <img src="/assets/img/gkp_code.png" alt="The GKP code and its operations." style="width: 80%; max-width: 600px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 4. The GKP code, with example in square and hexagonal lattices. Image from [8]
  </figcaption>
</figure>

<p>The ideal logical code is given by:</p>

\[\begin{equation}
\begin{split}
|0_L\rangle &amp;\propto \sum_{k=-\infty}^{\infty} e^{-i n k} \, \lvert 2k \alpha + \beta \rangle, \\
|1_L\rangle &amp;\propto \sum_{k=-\infty}^{\infty} \sum_{l=-\infty}^{\infty} e^{-i n (k+l)/2} \, \lvert (2k+1) \alpha + \beta \rangle.
\end{split}
\end{equation}\]

<p>where for square lattice, \(\alpha = \sqrt{\frac{\pi}{2}}\) and \(\beta = i \sqrt{\frac{\pi}{2}}\). Accounting to the finite energy effect, the logical code is approximated as \(\lvert \tilde{\mu}_L \rvert \propto e^{-\Delta^2 \hat{a}^\dagger \hat{a}} \lvert \mu_L \rvert\)</p>

<h1 id="references">References</h1>
<p>[1] W Cai et al, Bosonic quantum error correction codes in superconducting quantum circuits, Fundamental Research 2021 <br />
[2] Z Leghtas et al, Hardware-Efficient Autonomous Quantum Memory Protection, Physical Review Letters 2013 <br />
[3] N Ofek et al, Extending the lifetime of a quantum bit with error correction in superconducting circuits, Nature 2016 <br />
[4] H Hutin et al, Preparing Schr√∂dinger Cat States in a Microwave Cavity Using a Neural Network, PRX Quantum 2025 <br />
[5] M H Michael et al, New Class of Quantum Error-Correcting Codes for a Bosonic Mode, Physical Review X 2016 <br />
[6] L Hu et al, Quantum error correction and universal gate set operation on a binomial bosonic logical qubit, Nature Physics 2019 <br />
[7] D Gottesman, A Kitaev, and J Preskill, Encoding a qubit in an oscillator, Physical Review A 2001 <br />
[8] A L Grimsmo and S Puri, Quantum Error Correction with the Gottesman-Kitaev-Preskill Code, PRX Quantum 2021</p>]]></content><author><name></name></author><category term="reading" /><category term="QEC" /><category term="bosonic" /><summary type="html"><![CDATA[Cat, binomial, and GKP qubits]]></summary></entry><entry><title type="html">Superconducting Quantum Hardware Design and Analysis</title><link href="https://ferrispnugraha.github.io/blog/2025/quantum-hardware-analysis/" rel="alternate" type="text/html" title="Superconducting Quantum Hardware Design and Analysis" /><published>2025-08-23T18:00:00+00:00</published><updated>2025-08-23T18:00:00+00:00</updated><id>https://ferrispnugraha.github.io/blog/2025/quantum-hardware-analysis</id><content type="html" xml:base="https://ferrispnugraha.github.io/blog/2025/quantum-hardware-analysis/"><![CDATA[<h1 id="design-tools">Design tools</h1>

<h2 id="for-layout-design">For layout design</h2>

<p>As illustrated in Fig. 1, layoutting design focuses on the placement of the superconducting qubits and their interconnections such as the coupling resonators. While technically the designs are possible to be done directly through KLayout to generate the gds files, it is more convenient to use dedicated tools such as IBM Qiskit Metal [1], IQM KQCircuits [2] and SpinQ QEDA [3] to help with the layoutting. Users can use the Python interface to specify the locations and sizes of the components, and export the design to gds files for fabrication.</p>

<figure style="text-align: center;">
  <img src="/assets/img/kqcircuits_spinqeda.png" alt="A diagram showing the layoutting in superconducting quantum circuits." style="width: 80%; max-width: 600px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 1. Layoutting of superconducting quantum circuits, with the help of IQM KQCircuits [2] and SpinQ QEDA [3].
  </figcaption>
</figure>

<h2 id="for-simulation-or-analysis">For simulation or analysis</h2>

<p>After the layout design is complete, the design can be imported to simulation or analysis software such as AWS Quantum Palace [4], ANSYS Electronics [5] to perform electromagnetic simulation and circuit analysis. An example of the analysis software is shown in Fig. 2. These software can help to extract the circuit parameters such as the capacitance and inductance values, which can be used to calculate the qubit frequencies, anharmonicities, and coupling strengths. Using the convention used in ANSYS, we can divide the analysis into three types, namely the Q3D, driven-mode, and eigenmode analysis. While Q3D analysis extracts the Maxwell capacitance matrix among the conductors (or superconductor after being cooled), driven-mode analysis excites the circuit through an input and output fashion. On the other hand, the eigenmode analysis obtains the resonance frequencies of the circuit by solving the electromagnetic field in the system.</p>

<figure style="text-align: center;">
  <img src="/assets/img/palace_ansys.png" alt="A diagram showing the analysis software of superconducting quantum circuits." style="width: 80%; max-width: 600px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 2. Analyzing of superconducting quantum circuits, using AWS Quantum Palace [4] and ANSYS Electronics [5].
  </figcaption>
</figure>

<p>While open-source frameworks like Qiskit Metal or KQCircuit are more modularized, some commercial software like Keysight Quantum Pro [6] combines both layout design and analysis, providing a more integrated solution for superconducting quantum circuit design.</p>

<h1 id="for-circuit-analysis">For circuit analysis</h1>

<h2 id="lumped-oscillator-model">Lumped Oscillator Model</h2>

<p>The Lumped oscillator Model (LOM) analysis [7, 8] uses the
Maxwell Capacitance Matrix calculated by the static Q3D analysis. This matrix is defined according to the superconductor plates according to the geometry of the components like transmon qubit. One can then isolate each subsystem (Fig. 3) while constructing the Hamiltonian \(H_n = \frac{1}{2} \hat{Q}_n C_n^{-1} \hat{Q}_n + \frac{1}{2} \hat{\Phi}_n L_n^{-1} \hat{\Phi}_n + \sum_{j \in \mathcal{J}} \epsilon_j(\hat{\Phi}_j)\). Combined with the circuit quantum electrodynamics [9], Qiskit Metal [1] has implemented this analysis method to obtain the estimate of frequency, anharmonicity, coupling strength, \(T_1\), and \(T_2\).</p>

<figure style="text-align: center;">
  <img src="/assets/img/LOM_method.png" alt="A diagram showing the lumped oscillation model flow." style="width: 80%; max-width: 600px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 3. Lumped Oscillation Model analysis, image adapted from [7].
  </figcaption>
</figure>

<h2 id="black-box-quantization-bbq--impedance-analysis">Black-box quantization (BBQ) / Impedance Analysis</h2>

<p>The impedance-based Black Box Quantization (BBQ) [10, 11] uses the result from the HFSS Driven Modal Analysis. With the JJ of interest as the excitation port, one can simulate the circuit to obtain the self-scattering \(S(\omega)\), admittance \(Y(\omega)\), and impedance \(Z(\omega)\) response. With the admittance \(Y(\omega) = Z^{-1}(\omega) = j\omega C_p + \frac{1}{j\omega L_p} + \frac{1}{R_p}\), one can calculate the RLC values at the poles of impedance or zeros of admittance. Based on this, we can also estimate the frequency, Q factor, and anharmonicity, along with the coupling factor.</p>

<figure style="text-align: center;">
  <img src="/assets/img/BBQ_method.png" alt="The black-box quantization method in a nutshell." style="width: 80%; max-width: 600px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 4. Black-box quantization (BBQ) / Impedance Analysis in a nutshell, image adapted from [10, 11]
  </figcaption>
</figure>

<h2 id="energy-participation-ratio-epr">Energy Participation Ratio (EPR)</h2>

<p>The most recent analysis method uses the Energy Participation Ratio (EPR) obtained based on the HFSS Eigenmodal analysis [12]. From the classical EM simulation, we can calculate the EPR value which is the ratio between the inductive energy stored in the considered JJ element and the total inductive energy stored during the corresponding eigenmode. \cite{iEPR} suggests its inductive EPR (iEPR) [13] to be the ratio of the inductive energy stored in the whole element for better accuracy. By having the EPR \(p_{(q,c)}\), we can find the quantum zero-point fluctuation \(\phi^2_{(q,c)} = p_{(q,c)} \frac{\hbar \omega_{(q,c)}}{2E_J}\), and thus bridge with the JJ reduced flux \(\hat{\phi_J}= \phi_q(\hat{a}_q + \hat{a}^\dagger_q) + \phi_c(\hat{a}_c + \hat{a}^{\dagger}_c)\).  Frequency can then be calculated along with the Kerr matrices based on the EPR values.</p>

<figure style="text-align: center;">
  <img src="/assets/img/EPR_method.png" alt="The energy participation ratio method in a nutshell." style="width: 80%; max-width: 600px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 5. Energy Participation Ratio (EPR) in a system of multiple qubits, image from [12]
  </figcaption>
</figure>

<h1 id="references">References</h1>
<p>[1] https://qiskit-community.github.io/qiskit-metal/ <br />
[2] https://iqm-finland.github.io/KQCircuits/ <br />
[3] https://www.spinquanta.com/products-services/qpu-eda-design-software <br />
[4] https://awslabs.github.io/palace/stable/ <br />
[5] https://www.ansys.com/products/electronics <br />
[6] https://www.keysight.com/de/de/lib/resources/miscellaneous/eda-software/quantum-eda.html <br />
[7] ZK Minev et al, Circuit quantum electrodynamics (cQED) with modular quasi-lumped models, http://arxiv.org/abs/2103.10344, 2021 <br />
[8] Y Liu et al, Design of interacting superconducting quantum circuits with quasi-lumped models, APS March Meeting 2022 <br />
[9] A Blais et al, Circuit quantum electrodynamics, Rev. Mod. Phys. 93, 025005 (2021) <br />
[10] SE Nigg et al, Black-Box Superconducting Circuit Quantization, Physical Review Letters 108, 240501 (2012) <br />
[11] F Solgun et al, Blackbox quantization of superconducting circuits using exact impedance synthesis, Physical Review B 90, 134504 (2014) <br />
[12] ZK. Minev et al, Energy-participation quantization of Josephson circuits, npj Quantum Information 2021 <br />
[13] K-H Yu et al, Using inductive Energy Participation Ratio for Superconducting Quantum Chip Characterization, Physical Review Applied 21, 034027 (2024)</p>]]></content><author><name></name></author><category term="reading" /><category term="cqed" /><category term="engineering" /><summary type="html"><![CDATA[Design tools and circuit analysis methods]]></summary></entry><entry><title type="html">Fundamental transmon physics</title><link href="https://ferrispnugraha.github.io/blog/2025/transmon-physics/" rel="alternate" type="text/html" title="Fundamental transmon physics" /><published>2025-08-22T21:00:00+00:00</published><updated>2025-08-22T21:00:00+00:00</updated><id>https://ferrispnugraha.github.io/blog/2025/transmon-physics</id><content type="html" xml:base="https://ferrispnugraha.github.io/blog/2025/transmon-physics/"><![CDATA[<p>Since transmon qubit is a non-linear LC circuit, we expect some deviation of the Hamiltonian from the linear LC oscillator, as seen in Fig. 1. [1]</p>

<figure style="text-align: center;">
  <img src="/assets/img/LC_linear_nonlinear.png" alt="A diagram showing the difference between linear and non-linear LC circuits." style="width: 50%; max-width: 500px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 1. Linear LC circuit vs nonlinear LC circuit implemented by transmon, image from [2].
  </figcaption>
</figure>

<p>Given that the superconducting phase is \(\phi\). Since Josephson Junction has the current \(I = I_c \sin \phi\) while the potential difference is \(V = \frac{\Phi_0}{2\pi} \frac{d\phi}{dt}\) (here, \(\Phi_0 = \frac{h}{2e}\) is the magnetic flux quantum), it can be shown that Josephson Junction can be modeled as a non-linear inductor, where</p>

<p>\begin{equation}
L_{\text{eff}} = \frac{\Phi_0}{2\pi I_c} \frac{1}{\cos \phi}
\end{equation}</p>

<p>Hence, the effective transmon energy can be expressed as</p>

<p>\begin{equation}
\hat{H} = 4 E_C (\hat{n} - n_g)^2 - E_J \cos \hat{\phi}
\end{equation}</p>

<p>where \(E_J = \frac{\Phi_0 I_c}{2\pi}\) giving the energy landscape as shown in Fig. 1. [1]</p>

<p>Rearranging the Hamiltonian in Eq. (2) using the ladder operator \(\hat{b}\), we obtain</p>

<p>\begin{equation}
\hat{H} = \hbar \omega_q \left( \hat{b}^\dagger \hat{b} + \frac{1}{2} \right) + \frac{\alpha}{2} \hat{b}^\dagger \hat{b}^\dagger \hat{b} \hat{b}
\end{equation}</p>

<p>The second term is not found in linear LC resonator, hence giving \(\alpha = -E_C = -\frac{e^2}{2C_q}\) the term non-linearity or anharmonicity.</p>

<p>Obtaining the eigenenergies yields:</p>

<p>\begin{equation}
E_m \approx -E_J + \sqrt{8 E_C E_J} \left(m + \frac{1}{2} \right) - \frac{E_C}{12} (6m^2 + 6m + 3)
\end{equation}</p>

<p>Simple calculations from Eq. (4) will provide:</p>

\[\begin{align*}
\omega_{01} &amp;= E_1 - E_0 &amp;= \sqrt{8 E_C E_J} - E_C &amp;= \omega_p + \alpha \\
\omega_{12} &amp;= E_2 - E_1 &amp;= \sqrt{8 E_C E_J} - 2E_C &amp;= \omega_{01} + \alpha \\
\omega_{23} &amp;= E_3 - E_2 &amp;= \sqrt{8 E_C E_J} - 3E_C &amp;= \omega_{01} + 2\alpha \\
\omega_{n, n+1} &amp;= E_{n+1} - E_n &amp;= \sqrt{8 E_C E_J} - n E_C &amp;= \omega_{01} + n\alpha
\end{align*}\]

<p>One may also show that \(E_{0m} = m \omega_{01} + \frac{\alpha}{2} m(m-1)\)</p>

<p>The number of states in the transmon is limited by the energy barrier \(2 E_J\). Hence, we can approximate that</p>

<p>\begin{equation}
N \approx \frac{2 E_J}{\hbar \omega_{01}}
\end{equation}</p>

<p>For \(E_J = 13.6GHz\) and \(\omega_{01} = 5GHz\), we obtain \(N \approx 5\) levels [3].</p>

<h1 id="references">References</h1>
<p>[1] J Koch et al, Charge-insensitive qubit design derived from the Cooper pair box, Physical Review Applied 2007. <br />
[2] P Krantz et al, A quantum engineer‚Äôs guide to superconducting qubits, Applied Physics Reviews 6, 021318 (2019) <br />
[3] Z Wang et al, High-EJ/EC transmon qudits with up to 12 levels, Physical Review Applied 2025.</p>]]></content><author><name></name></author><category term="reading" /><category term="physics" /><category term="superconducting" /><summary type="html"><![CDATA[Cheat sheet style]]></summary></entry><entry><title type="html">Recent architecture used in superconducting qubit processors</title><link href="https://ferrispnugraha.github.io/blog/2025/recent-architecture/" rel="alternate" type="text/html" title="Recent architecture used in superconducting qubit processors" /><published>2025-08-22T16:00:00+00:00</published><updated>2025-08-22T16:00:00+00:00</updated><id>https://ferrispnugraha.github.io/blog/2025/recent-architecture</id><content type="html" xml:base="https://ferrispnugraha.github.io/blog/2025/recent-architecture/"><![CDATA[<h1 id="coupling-types">Coupling Types</h1>

<h2 id="fixed-capacitive-coupling">Fixed capacitive coupling</h2>

<p>Each transmon qubit is coupled through a fixed capacitance creating the coupling strength \(g_{12}\) as shown in Fig. 1.</p>

<p>\begin{equation}
\hat{H}/\hbar = \sum_{i=1,2}\left({\omega_{q,i} \hat{b}_i^\dagger \hat{b}_i + \frac{\alpha_{q,i}}{2} \hat{b}_i^\dagger \hat{b}_i^\dagger \hat{b}_i \hat{b}_i} \right)+ g_{12} \left( \hat{b}_1^\dagger + \hat{b}_1 \right)\left( \hat{b}_2^\dagger + \hat{b}_2 \right)
\end{equation}</p>

<p>The Hamiltonian of the system is given in Eq. (1), where the coupling strength is given by \(g_{12} = \frac{2E_{C1}E_{C2}}{E_c} \left( \frac{E_{J1}}{2E_{C1}} \times \frac{E_{J2}}{2E_{C2}} \right)^{1/4}\) [1].</p>

<figure style="text-align: center;">
  <img src="/assets/img/fixed-cap-coupling.png" alt="A diagram showing two qubits connected by a fixed capacitor." style="width: 50%; max-width: 500px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 1. Qubits connected through a fixed capacitance, image from [2].
  </figcaption>
</figure>

<p>This coupling scheme inspires the heavy hexagonal architecture adapted by IBM Quantum in its early processors such as IBM Condor and its predecessors, illustrated in Fig. 2 [3, 4]. However, more connectivity among the qubits increases the vulnerability to frequency collisions.</p>

<figure style="text-align: center;">
  <img src="/assets/img/heavy_hex.png" alt="A diagram showing the heavy hex architecture used in previous IBM Quantum processors." style="width: 50%; max-width: 500px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 2. Heavy hex architecture used in previous IBM Quantum processors, image from [3].
  </figcaption>
</figure>

<h2 id="tunable-coupler-based">Tunable coupler based</h2>

<p>Each transmon qubit is coupled through a tunable transmon coupler with higher frequency maintaining the dispersive interaction.</p>

<p>\begin{equation}
\hat{H}/\hbar = \sum_{i=1,2}\left({\omega_{q,i} \hat{b}_i^\dagger \hat{b}_i + \frac{\alpha_{q,i}}{2} \hat{b}_i^\dagger \hat{b}_i^\dagger \hat{b}_i \hat{b}_i} \right)+ \sum_{i\neq j} g_{ij} \left( \hat{b}_i^\dagger + \hat{b}_i \right)\left( \hat{b}_j^\dagger + \hat{b}_j \right)
\end{equation}</p>

<figure style="text-align: center;">
  <img src="/assets/img/tunable_coupling.png" alt="A diagram showing two qubits connected by a tunable coupler." style="width: 50%; max-width: 500px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 3. Qubits connected through a tunable transmon coupler, image from [5].
  </figcaption>
</figure>

<p>The Hamiltonian is as shown in Eq. (2), where each coupling strengths can be expressed in terms of the coupling capacitances: \(g_1 \approx \frac{1}{2} \frac{C_{1c}}{\sqrt{C_1 C_c}} \sqrt{\omega_1 \omega_c}\), \(g_2 \approx \frac{1}{2} \frac{C_{2c}}{\sqrt{C_2 C_c}} \sqrt{\omega_2 \omega_c}\), and \(g_{12} \approx \frac{1}{2} \left[ \frac{C_{12}}{\sqrt{C_1 C_2}} + \frac{C_{1c}C_{2c}}{\sqrt{C_1 C_2 C_c^2}} \right] \sqrt{\omega_1 \omega_2}\) [].</p>

<figure style="text-align: center;">
  <img src="/assets/img/square_lattice.png" alt="A diagram showing the square lattice used by Google Quantum AI." style="width: 50%; max-width: 500px;" />
  <figcaption style="font-size: 0.9em; ">
    Fig. 4. Square lattice architecture used by Google Quantum AI, image from [6].
  </figcaption>
</figure>

<p>Recently, this scheme gains popularity due to the potential of isolating some qubits with the tunable coupling strength. This scheme inspires the square lattice used by Google Quantum AI [6], along with some processors developed by ETH Zurich [7], USTC [8], and IQM Finland [9]. IBM Quantum has also started to adopt this scheme, beginning from IBM Heron [10].</p>

<h1 id="references">References</h1>
<p>[1] A Blais et al, Circuit quantum electrodynamics, Reviews of Modern Physics 93, 025003 (2021) <br />
[2] P Krantz et al, A quantum engineer‚Äôs guide to superconducting qubits, Applied Physics Reviews 6, 021318 (2019) <br />
[3] https://research.ibm.com/blog/heavy-hex-lattice <br />
[4] C Chamberland et al, Topological and Subsystem Codes on Low-Degree Graphs with Flag Qubits, Phys. Rev. X 10, 011022 (2020) <br />
[5] F Yan et al, Tunable Coupling Scheme for Implementing High-Fidelity Two-Qubit Gates, Physical Review Applied 10, 054062 (2018) <br />
[6] Google Quantum AI, Suppressing quantum errors by scaling a surface code logical qubit, Nature 614, pages 676‚Äì681 (2023)<br />
[7] F Swiadek et al, Enhancing dispersive readout of superconducting qubits through dynamic control of the dispersive shift: Experiment and theory, PRX Quantum 2024<br />
[8] Y Wu et al, Strong quantum computational advantage using a superconducting quantum processor, Physical Review Letters 127 (18), 180501 <br />
[9] https://aws.amazon.com/cn/blogs/quantum-computing/amazon-braket-launches-new-54-qubit-superconducting-quantum-processor-from-iqm/ <br />
[10] https://www.ibm.com/quantum/blog/large-scale-ftqc</p>]]></content><author><name></name></author><category term="reading" /><category term="applied" /><category term="superconducting" /><summary type="html"><![CDATA[Fixed capacitive coupling and tunable coupler based]]></summary></entry><entry><title type="html">Practice lists for IPhO, APhO, etc.</title><link href="https://ferrispnugraha.github.io/blog/2023/olympiad-practice/" rel="alternate" type="text/html" title="Practice lists for IPhO, APhO, etc." /><published>2023-09-04T13:00:00+00:00</published><updated>2023-09-04T13:00:00+00:00</updated><id>https://ferrispnugraha.github.io/blog/2023/olympiad-practice</id><content type="html" xml:base="https://ferrispnugraha.github.io/blog/2023/olympiad-practice/"><![CDATA[<p>The following list is not exhaustive, and it is not meant to be. It is just a list of books that I have read and found useful. I hope it can be useful for you too. The key is to practice with available problems and solutions.</p>

<h4 id="general-physics">General physics</h4>
<hr />
<p>D. Halliday, R. Resnick, and J. Walker, Fundamentals of Physics. Milton: John Wiley, 2020.</p>

<h4 id="olympiads">Olympiads</h4>
<hr />
<p>H. Kwee, T. J. Anly, and Y. Virgus, Menjadi Juara Olimpiade. Edisi kedua. Yayasan Sinergi Mencerdaskan Tunas Negeri, 2017.</p>

<p>L. Holics, 300 Creative Physics Problems: With Solutions. London: Anthem Press, 2011.</p>

<p>J. Kalda. <a href="https://www.ioc.ee/~kalda/ipho/">Study guides for IPhO</a></p>

<p>For IPhO and APhO, may refer to the official websites or at <a href="https://ipho.olimpicos.net/">here</a> and <a href="https://apho.olimpicos.net/">here</a></p>

<h4 id="classical-mechanics-and-waves">Classical mechanics and Waves</h4>
<hr />
<p>D. Morin, Introduction to Classical Mechanics: With Problems and Solutions. Cambridge: Cambridge University Press, 2019.</p>

<p>Y.-K. Lim, Problems and Solutions on Mechanics. Singapore: World Scientific, 2008.</p>

<p>H. J. Pain, The Physics of Vibrations and Waves. Chichester: Wiley, 2008.</p>

<p>H. Georgi, The Physics of Waves. Englewood Cliffs, NJ: Prentice Hall, 2022.</p>

<p>J. Wang and B. Ricardo, Competitive Physics: Mechanics and Waves. World Scientific, 2019.</p>

<h4 id="electromagnetism">Electromagnetism</h4>
<hr />
<p>D. J. Griffiths, Introduction to Electrodynamics. Cambridge University Press, 2023.</p>

<p>Y. Lim and S. Zhao, Problems and Solutions on Electromagnetism. Singapore: World Scientific, 2007.</p>

<p>E. M. Purcell and D. J. Morin, Electricity and Magnetism. Cambridge: Cambridge University Press, 2013.</p>

<p>J. Wang and B. Ricardo, Competitive Physics: Thermodynamics, Electromagnetism and Relativity. Singapore: World Scientific Publishing Co. Pte. Ltd., 2019.</p>

<h4 id="optics">Optics</h4>
<hr />

<p>E. Hecht, Optics. Boston: Pearson, 2016.</p>

<p>Z. Abidin, Gelombang dan Optik. STKIP Surya, 2017.</p>

<p>G. Bai, G. Guo, and Y. Lim, Problems and Solutions on Optics. Singapore: World Scientific, 2011.</p>

<h4 id="thermodynamics">Thermodynamics</h4>
<hr />
<p>F. W. Sears and G. L. Salinger, Thermodynamics, Kinetic Theory, and Statistical Thermodynamics. Reading, MA: Addison-Wesley, 1986.</p>

<p>S. Blundell and K. M. Blundell, Concepts in Thermal Physics. Oxford: Oxford University Press, 2019.</p>

<p>Y. Lim, Problems and Solutions on Thermodynamics and Statistical Mechanics. Singapore: World Scientific, 1996.</p>

<h4 id="relativity">Relativity</h4>
<hr />
<p>D. Morin, Introduction to Classical Mechanics: With Problems and Solutions. Cambridge: Cambridge University Press, 2019.</p>

<p>Y. Lim, Problems and Solutions on Solid State Physics, Relativity and Miscellaneous Topics. Singapore: World Scientific, 1994.</p>

<h4 id="modern-physics">Modern physics</h4>
<hr />
<p>K. S. Krane, Modern Physics. Hoboken, NJ: Wiley, 2020.</p>

<p>C. Kittel and P. McEuen, Introduction to Solid State Physics. Hoboken, NJ: Wiley, 2022.</p>

<p>D. J. Griffiths and D. F. Schroeter, Introduction to Quantum Mechanics. Cambridge: Cambridge University Press, 2020.</p>

<p>Y. Lim, Problems and Solutions on Quantum Mechanics. Singapore: World Scientific, 1994.</p>

<p>Y. Lim, Problems and Solutions on Atomic, Nuclear, and Particle Physics. Singapore: World Scientific, 2000.</p>]]></content><author><name></name></author><category term="reading" /><category term="physics" /><category term="olympiad" /><summary type="html"><![CDATA[classical mechanics, electromagnetism, thermodynamics, optics, wave, relativity, and modern physics]]></summary></entry><entry><title type="html">RL for quantum control</title><link href="https://ferrispnugraha.github.io/blog/2023/reinforcement-learning-for-quantum-control/" rel="alternate" type="text/html" title="RL for quantum control" /><published>2023-08-29T10:00:00+00:00</published><updated>2023-08-29T10:00:00+00:00</updated><id>https://ferrispnugraha.github.io/blog/2023/reinforcement-learning-for-quantum-control</id><content type="html" xml:base="https://ferrispnugraha.github.io/blog/2023/reinforcement-learning-for-quantum-control/"><![CDATA[<p>Coming soon!</p>]]></content><author><name></name></author><category term="demo" /><category term="reinforcement-learning" /><summary type="html"><![CDATA[Demonstration with bang-bang protocol]]></summary></entry></feed>